

<!DOCTYPE html>
<html>
<head>
  <title>üöú Submit Load</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/localforage/1.10.0/localforage.min.js" integrity="sha512-yEdgV7l7nFYv0HqSRu13kI2jq3x4mS7zS0S3/dc2AEgUvRSPHjZs9O6scPbQwDtwO1GZx3z2NUk7SK7AyQXG8Q==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: url("/dt-bg.png") no-repeat center center fixed;
      background-size: cover;
      margin: 0;
      padding: 0;
      color: #fff;
      font-size: 20px;
    }
    .container {
      background: rgba(0, 0, 0, 0.8);
      padding: 30px 24px;
      max-width: 700px;
      margin: 40px auto;
      border-radius: 14px;
    }
    h1, h2, h3 {
      text-align: center;
      font-weight: bold;
    }
    h1 { font-size: 34px; margin-bottom: 20px; }
    h2 { font-size: 28px; margin-top: 40px; }
    h3 { font-size: 24px; margin: 10px 0; }
    label {
      font-size: 22px;
      font-weight: bold;
      display: block;
      margin-top: 18px;
    }
    select, input {
      width: 100%;
      padding: 16px;
      margin-top: 8px;
      border-radius: 6px;
      border: none;
      font-size: 20px;
    }
    button {
      padding: 16px 24px;
      font-size: 20px;
      background: #4CAF50;
      border: none;
      color: white;
      border-radius: 6px;
      cursor: pointer;
      width: 100%;
      font-weight: bold;
      margin-top: 16px;
    }
    .tracked {
      background: #222;
      padding: 18px;
      margin-top: 30px;
      border-radius: 10px;
    }
    .tracked ul { padding-left: 20px; }
    #sync-banner, #offline-banner {
      display: none;
      text-align: center;
      padding: 10px;
      font-weight: bold;
      font-size: 20px;
      z-index: 9999;
    }
    #sync-banner { background: #222; color: #fff; }
    #offline-banner { background: red; color: white; position: fixed; top: 0; left: 0; right: 0; }
  </style>
</head>
<body>

<div id="sync-banner"></div>

<div class="container">
  <h1>D&T Manure Hauling</h1>
  <h3>Total Gallons Today: <%= totalGallons %></h3>
  <h3>Total Fuel Used Today: <%= totalFuel %></h3>

  <% if (typeof lastLoad !== "undefined" && lastLoad) { %>
    <p><strong>Most Recent Load:</strong>
      <%= new Date(lastLoad.timestamp).toLocaleString("en-US", { timeZone: "America/New_York", hour12: true }) %>
      by <%= lastLoad.tractor?.name || "Unknown Tractor" %>
    </p>
  <% } %>

  <!-- Submit Load -->
  <form method="POST" action="/load">
    <h2>Submit Load</h2>

    <label for="tractor">Tractor:</label>
    <select name="tractor" required>
      <% tractors.forEach(t => { %>
        <option value="<%= t._id %>"><%= t.name %> (<%= t.gallons %> gal)</option>
      <% }) %>
    </select>

    <label for="farm">Farm:</label>
    <select name="farm" required>
      <% farms.forEach(f => { %>
        <option value="<%= f._id %>"><%= f.name %></option>
      <% }) %>
    </select>

    <label for="field">Field:</label>
    <select name="field" required>
      <% fields.forEach(f => { %>
        <option value="<%= f._id %>"><%= f.name %></option>
      <% }) %>
    </select>

    <label for="pit">Pit:</label>
    <select name="pit" required>
      <% pits.forEach(p => { %>
        <option value="<%= p._id %>"><%= p.name %></option>
      <% }) %>
    </select>

    <label for="startHour">Start Hour</label>
    <input type="number" name="startHour" step="0.1" min="0" placeholder="Required On First Load">

    <button type="submit">Submit Load</button>
  </form>

  <!-- Submit End Hour -->
  <form method="POST" action="/submit-end-hour" class="dual-buttons">
    <h2>Submit End Hour</h2>
    <input type="number" name="endHour" step="0.1" min="0" placeholder="End Hour" required>
    <button type="submit">Submit End Hour</button>
  </form>

  <!-- Submit Fuel -->
  <form method="POST" action="/submit-fuel">
    <h2>Submit Fuel</h2>
    <label for="tractor">Tractor:</label>
    <select name="tractor" required>
      <% tractors.forEach(t => { %>
        <option value="<%= t._id %>"><%= t.name %></option>
      <% }) %>
    </select>

    <label for="farm">Farm:</label>
    <select name="farm">
      <option value="">None</option>
      <% farms.forEach(f => { %>
        <option value="<%= f._id %>"><%= f.name %></option>
      <% }) %>
    </select>

    <label for="amount">Fuel Amount:</label>
    <input type="number" step="0.1" name="amount" required>

    <button type="submit">Submit Fuel</button>
  </form>

  <!-- Submit Transfer/Hauling -->
  <form method="POST" action="/submit-transfer">
    <h2>Submit Transfer/Hauling Hours</h2>
    <label for="tractor">Tractor:</label>
    <select name="tractor" required>
      <% tractors.forEach(t => { %>
        <option value="<%= t._id %>"><%= t.name %></option>
      <% }) %>
    </select>

    <label for="field">Fields:</label>
    <select name="field">
      <option value="">None</option>
      <% fields.forEach(f => { %>
        <option value="<%= f._id %>"><%= f.name %></option>
      <% }) %>
    </select>

    <label for="pump">Pump:</label>
    <select name="pump">
      <option value="">None</option>
      <% (pumps || []).forEach(p => { %>
        <option value="<%= p._id %>"><%= p.name %></option>
      <% }) %>
    </select>

    <label for="farmer">Farmer:</label>
    <select name="farmer">
      <option value="">None</option>
      <% (farmers || []).forEach(f => { %>
        <option value="<%= f._id %>"><%= f.name %></option>
      <% }) %>
    </select>

    <label for="trailer">Trailer:</label>
    <select name="trailer">
      <option value="">None</option>
      <% (trailers || []).forEach(t => { %>
        <option value="<%= t._id %>"><%= t.name %></option>
      <% }) %>
    </select>

    <label for="sand">Sand Spreader:</label>
    <select name="sand">
      <option value="">None</option>
      <% (sands || []).forEach(s => { %>
        <option value="<%= s._id %>"><%= s.name %></option>
      <% }) %>
    </select>

    <label for="startHour">Start Hour:</label>
    <input type="text" name="startHour" required>

    <label for="endHour">End Hour:</label>
    <input type="text" name="endHour">

    <button type="submit">Submit Transfer Hours</button>
  </form>

  <% if (trackedHours && Object.keys(trackedHours).length > 0) { %>
    <div class="tracked">
      <h3>‚úÖ Tracked Start Hours</h3>
      <ul>
        <% for (let key in trackedHours) { %>
          <li><strong><%= key %></strong>: <%= trackedHours[key] %></li>
        <% } %>
      </ul>
    </div>
  <% } %>

</div>

<!-- Offline / Sync Scripts -->
<script>
  if ('serviceWorker' in navigator && 'SyncManager' in window) {
    navigator.serviceWorker.register('/service-worker.js')
      .then(() => console.log("‚úÖ Service Worker Registered"))
      .catch(err => console.error("‚ùå Service Worker registration failed:", err));

    window.addEventListener("load", () => {
      const form = document.querySelector("form[action='/load']");
      const banner = document.getElementById("sync-banner");

      navigator.serviceWorker.addEventListener("message", (event) => {
        if (event.data.type === "queue-update") {
          banner.textContent = `‚è≥ ${event.data.count} load(s) waiting to sync`;
          banner.style.display = "block";
        } else if (event.data.type === "sync-complete") {
          banner.textContent = event.data.count > 0
            ? `‚è≥ ${event.data.count} load(s) waiting to sync`
            : `‚úÖ All pending loads synced`;
          banner.style.display = "block";
        }
      });

      form?.addEventListener("submit", async (e) => {
        if (!navigator.onLine) {
          e.preventDefault();
          const formData = new FormData(form);
          const data = {};
          formData.forEach((v, k) => data[k] = v);
          const registration = await navigator.serviceWorker.ready;
          registration.active.postMessage({
            type: "store-form",
            url: "/load",
            data
          });
          alert("üì¶ Load saved offline and will sync when back online.");
        }
      });
    });
  }

  function updateOnlineStatus() {
    const banner = document.getElementById("offline-banner");
    if (navigator.onLine) {
      banner.style.display = "none";
    } else {
      banner.style.display = "block";
    }
  }
  window.addEventListener("load", updateOnlineStatus);
  window.addEventListener("online", updateOnlineStatus);
  window.addEventListener("offline", updateOnlineStatus);
</script>

<div id="offline-banner">
  ‚ö†Ô∏è No internet connection. Submissions will be saved when you‚Äôre back online.
</div>

</body>
</html>
